
import pygame
import random
import os
import unidecode
import io

pygame.font.init()
font=pygame.font.SysFont("comicsans",80)

WIDTH,HEIGHT=1400,900

GREEN = 0,255,127
ORANGE = 255,165,0
BLACK=0,0,0
WHITE=255,255,255

PK=[pygame.K_a,pygame.K_b,pygame.K_c,pygame.K_d,pygame.K_e,pygame.K_f,pygame.K_g,pygame.K_h,pygame.K_i,pygame.K_j,pygame.K_k,pygame.K_l,
pygame.K_n,pygame.K_o,pygame.K_p,pygame.K_q,pygame.K_r,pygame.K_s,pygame.K_u,pygame.K_v,pygame.K_w,pygame.K_x,pygame.K_y,pygame.K_z]
alfabeto='abcdefghijklmnopqrstuvwxyz'

WIN =pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("TERMOOO")


def get_word(keys_pressed,cw):
    if len(cw)<5:
        if keys_pressed[pygame.K_a]:
            cw.append("a")
        if keys_pressed[pygame.K_b]:
            cw.append("b")
        if keys_pressed[pygame.K_c]:
            cw.append("c")
        if keys_pressed[pygame.K_d]:
            cw.append("d")
        if keys_pressed[pygame.K_e]:
            cw.append("e")
        if keys_pressed[pygame.K_f]:
            cw.append("f")
        if keys_pressed[pygame.K_g]:
            cw.append("g")
        if keys_pressed[pygame.K_h]:
            cw.append("h")
        if keys_pressed[pygame.K_i]:
            cw.append("i")
        if keys_pressed[pygame.K_j]:
            cw.append("j")
        if keys_pressed[pygame.K_k]:
            cw.append("k")
        if keys_pressed[pygame.K_l]:
            cw.append("l")
        if keys_pressed[pygame.K_m]:
            cw.append("m")
        if keys_pressed[pygame.K_n]:
            cw.append("n")
        if keys_pressed[pygame.K_o]:
            cw.append("o")
        if keys_pressed[pygame.K_p]:
            cw.append("p")
        if keys_pressed[pygame.K_q]:
            cw.append("q")
        if keys_pressed[pygame.K_r]:
            cw.append("r")
        if keys_pressed[pygame.K_s]:
            cw.append("s")
        if keys_pressed[pygame.K_t]:
            cw.append("t")
        if keys_pressed[pygame.K_u]:
            cw.append("u")
        if keys_pressed[pygame.K_v]:
            cw.append("v")
        if keys_pressed[pygame.K_w]:
            cw.append("w")
        if keys_pressed[pygame.K_x]:
            cw.append("x")
        if keys_pressed[pygame.K_y]:
            cw.append("y")
        if keys_pressed[pygame.K_z]:
            cw.append("z")   
    if keys_pressed[pygame.K_BACKSPACE] and len(cw)>0:
        cw.pop()
    return cw
        
def checking(word,cw,colors):
    for i,char in enumerate(cw):
        if char in word:
            if cw[i]==word[i]:
                colors.append(GREEN)
            else:
                colors.append(ORANGE)
        else:
            colors.append(BLACK)
    return colors

def draw_letters(tries):
    for c in tries:
        letter=font.render(c,1,WHITE)
        for i in range(0,6):
            for j in range(0,5):
                WIN.blit(letter,(WIDTH/2-290+((100-letter.get_width())//2)+(120*j),100+(100-letter.get_height())+120*i))    
    pygame.display.update() 

def draw_init_win():
    WIN.fill(WHITE)
    for i in range(0,6):
        for j in range(0,5):
            pygame.draw.rect(WIN,BLACK,((WIDTH/2-290)+(120*j),100+(120*i),100,100),5,5)
    pygame.display.update()            

def check_vit(cw,word):
    if cw == word:
        return True
    else:
        return False

def draw_tries(word,cw,colors,tries):
    cd=checking(word,cw,colors)
    for i in cw:
        tries.append(i)
    cw.clear()
    for c in range(len(tries)):
        pygame.draw.rect(WIN,cd[c],((WIDTH/2-290)+(120*c%5),100+(120*c//5),100,100),border_radius=5)
    pygame.display.update()

def draw_current(cw,nt):
    for c,char  in enumerate(cw):
        letter=font.render(char,1,BLACK)
        WIN.blit(letter,(WIDTH/2-290+((100-letter.get_width())//2)+(120*c),100+(100-letter.get_height())+120*nt))     
    pygame.display.update()


def load_text():
    with io.open("BD","r",encoding="utf8") as f:
        lines=f.readlines()
    return lines,(random.choice(lines)).strip()

def treat_text(txt):
    word=unidecode.unidecode(txt).strip()
    return word

def list_maker(txt):
    word=[]
    for char in txt:
        word.append(char)
    return word

def menu():
    while True:
        rects_w,rects_h=450,100
        WIN.fill(WHITE)
        pygame.draw.rect(WIN,BLACK,(WIDTH/2-rects_w/2,250,rects_w,rects_h),border_radius=5)
        texto_t=font.render("Termo",1,WHITE)
        WIN.blit(texto_t,((WIDTH/2-texto_t.get_width()//2),250+(rects_h-texto_t.get_height())//2))
        pygame.draw.rect(WIN,BLACK,(WIDTH/2-rects_w/2,370,rects_w,rects_h),border_radius=5)
        pygame.draw.rect(WIN,BLACK,(WIDTH/2-rects_w/2,490,rects_w,rects_h),border_radius=5)
        pygame.display.update()
        (x,y)=pygame.mouse.get_pos()
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                quit()
        buttons=pygame.mouse.get_pressed()
        if buttons[0]==True:
            if WIDTH/2-rects_w/2<x<WIDTH/2-rects_w/2+rects_w and 250<y<250+rects_h:
                main()
            elif WIDTH/2-rects_w/2<x<WIDTH/2-rects_w/2+rects_w and 370<y<370+rects_h:
                print('2')
            elif WIDTH/2-rects_w/2<x<WIDTH/2-rects_w/2+rects_w and 490<y<490+rects_h:
                print('3')

def main():
    run=True
    cw=[]
    clock=pygame.time.Clock()
    pw,txt=load_text()
    pw_t=[]
    for i in pw:
        pw_t.append(unidecode.unidecode(i).strip())
    word=list_maker(treat_text(txt))
    colors=[]
    tries=[]
    nt=0
   
    while run:
        clock.tick(10)
        draw_init_win()
        keys_pressed=pygame.key.get_pressed()
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                quit()
            if keys_pressed[pygame.K_RETURN]:
                test_w=''.join(cw)
                print(test_w)
                if test_w in pw_t:
                    if check_vit(cw,word):
                        menu()
                    draw_tries(word,cw,colors,tries)
                    draw_letters(tries)
                    nt+=1
        
        draw_current(cw,nt)


                    
        keys_pressed=pygame.key.get_pressed()
        get_word(keys_pressed,cw)
menu()